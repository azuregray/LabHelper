10)
Step 1: Set Up the React Project 
First, set up a new React project using Create React App: 
npx create-react-app api-data-fetch-app 
cd api-data-fetch-app 
npm start 


Step 2: Create a Component to Fetch and Display Data 
Create a new file named DataFetcher.js in the src directory and add the 
following code: 
import React, { useState, useEffect } from 'react'; 
const DataFetcher = () => { 
const [data, setData] = useState([]); 
const [loading, setLoading] = useState(true); 
const [error, setError] = useState(null); 
useEffect(() => { 
fetch('https://jsonplaceholder.typicode.com/posts') 
.then((response) => { 
if (!response.ok) { 
throw new Error('Network response was not ok'); 
} 
return response.json(); 
}) 
.then((data) => { 
setData(data); 
setLoading(false); 
}) 
.catch((error) => { 
setError(error); 
setLoading(false); 
}); 
}, []); 
if (loading) { 
return <div>Loading...</div>; 
} 
if (error) { 
return <div>Error: {error.message}</div>; 
} 
return ( 
<div> 
<h1>Data from API</h1> 
<ul> 
{data.map((item) => ( 
<li key={item.id}>{item.title}</li> 
))} 
</ul> 
</div> 
); 
}; 
export default DataFetcher; 


Step 3: Integrate the DataFetcher Component 
Open src/App.js and integrate the DataFetcher component: 
import React from 'react'; 
import './App.css'; 
import DataFetcher from './DataFetcher'; 
function App() { 
return ( 
<div className="App"> 
<header className="App-header"> 
<h1>API Data Fetch Example</h1> 
<DataFetcher /> 
</header> 
</div> 
); 
} 
export default App; 


Step 4: Run the Application 
Run the application using: 
npm start 
Open your browser and navigate to http://localhost:3000. You should see the 
data fetched from the REST API displayed on the page.