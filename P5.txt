1. Setup

First, make sure you have Node.js installed. You can verify this by running:
node -v
npm -v

Create a new directory for your project and initialize a new Node.js project:
mkdir file-system-crud
cd file-system-crud
npm init -y

Install the necessary dependencies (although for basic file operations, fs is
built-in and you don't need any external packages):
npm install

2. CRUD Operations with Node.js fs Module :

a. Create
To create or write data to a file, use the fs.writeFile() method. If the file does
not exist, it will be created. If it does exist, it will be overwritten.

const fs = require('fs');
const path = './example.txt';
// Create or overwrite a file with some content
fs.writeFile(path, 'Hello, World!', (err) => {
 if (err) throw err;
 console.log('File created and content written!');
});

b. Read
To read data from a file, use the fs.readFile() method.
const fs = require('fs');
const path = './example.txt';
// Read the content of the file
fs.readFile(path, 'utf8', (err, data) => {
if (err) throw err;
 console.log('File content:', data);
});

c. Update
To update or append data to a file, use the fs.appendFile() method.
const fs = require('fs');
const path = './example.txt';
// Append data to the file
fs.appendFile(path, '\nNew content appended!', (err) => {
 if (err) throw err;
 console.log('Content appended to the file!');
});

d. Delete
To delete a file, use the fs.unlink() method.
const fs = require('fs');
const path = './example.txt';
// Delete the file
fs.unlink(path, (err) => {
 if (err) throw err;
 console.log('File deleted!');
});

3. Putting It All Together
const fs = require('fs');
const path = './example.txt';
// CREATE: Write data to the file
fs.writeFile(path, 'Hello, World!', (err) => {
 if (err) throw err;
 console.log('File created and content written!');
 // READ: Read the content of the file
 fs.readFile(path, 'utf8', (err, data) => {
 if (err) throw err;
 console.log('File content:', data);
 // UPDATE: Append data to the file
 fs.appendFile(path, '\nNew content appended!', (err) => {
 if (err) throw err;
 console.log('Content appended to the file!');
 // DELETE: Remove the file
 fs.unlink(path, (err) => {
 if (err) throw err;
 console.log('File deleted!');
 });
 });
 });
});